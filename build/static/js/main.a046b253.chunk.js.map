{"version":3,"sources":["Components/PrivateRoute.js","Components/PublicRoute.js","routes.js","Components/Navigation/AuthNav.js","Components/Navigation/Logout.js","Components/Navigation/Navigation.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","Components/Navigation/Navigation.module.css","Components/Modal/Modal.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","Components/Modal/Modal.js"],"names":["connect","state","isAuthenticated","authSelectors","getIsAuthenticated","Component","component","redirectTo","routeProps","render","props","to","restricted","routes","home","register","login","contacts","AuthNav","className","s","mainLink","activeClassName","mainLinkActive","Logout","name","useSelector","getUsername","dispatch","useDispatch","Button","variant","color","style","marginLeft","onClick","authOperations","logoutUser","Navigation","AppBar","position","Toolbar","mainNav","exact","HomeView","lazy","ContactsView","LoginView","RegistrationView","App","errorLogin","getError","isAuthLoading","getLoading","useEffect","getCurrentUser","toast","warn","Container","maxWidth","fallback","path","Modal","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","auth","persistReducer","authReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","actions","loginUserRequest","createAction","loginUserSuccess","loginUserError","logoutUserRequest","logoutUserSuccess","logoutUserError","registrationUserRequest","registrationUserSuccess","registrationUserError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","operations","loginUser","credentials","a","authActions","post","response","data","message","registrationUser","getState","persistedToken","get","selectors","user","error","initialUserState","email","setUser","_","payload","createReducer","userAction","setToken","setTrue","setFalse","setError","userReducer","combineReducers","module","exports","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","editContactRequest","editContactSuccess","editContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","operationContacts","fetchContacts","then","catch","addContact","values","deleteContact","contactId","delete","editContact","id","patch","getAllContacts","items","getFilter","filter","operationSelectors","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","el","indexOf","contact","map","todo","modalRoot","querySelector","children","onClose","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","Modal__backdrop","event","currentTarget","target","Modal__content"],"mappings":"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","file":"static/js/main.a046b253.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n\nexport default routes;\n","import React from 'react';\nimport routes from '../../routes';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navigation.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to={routes.login}\n        className={s.mainLink}\n        activeClassName={s.mainLinkActive}\n      >\n        Login\n      </NavLink>\n      <NavLink\n        to={routes.register}\n        className={s.mainLink}\n        activeClassName={s.mainLinkActive}\n      >\n        Registration\n      </NavLink>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport { Button } from '@material-ui/core';\n\nfunction Logout() {\n  const name = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <span>Welcome, {name}</span>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ marginLeft: 10 }}\n        onClick={() => dispatch(authOperations.logoutUser())}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n\nexport default Logout;\n","import React from 'react';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport routes from '../../routes';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nimport AuthNav from './AuthNav';\nimport Logout from './Logout';\nimport s from './Navigation.module.css';\n\nfunction Navigation() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar className={s.mainNav}>\n        <div>\n          <NavLink\n            to={routes.home}\n            exact\n            className={s.mainLink}\n            activeClassName={s.mainLinkActive}\n          >\n            Home\n          </NavLink>\n          {isAuthenticated && (\n            <NavLink\n              to={routes.contacts}\n              className={s.mainLink}\n              activeClassName={s.mainLinkActive}\n            >\n              Contacts\n            </NavLink>\n          )}\n        </div>\n        {isAuthenticated ? <Logout /> : <AuthNav />}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Navigation;\n","import { Route, Switch } from 'react-router-dom';\nimport { useEffect, Suspense, lazy } from 'react';\nimport { Container } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { authOperations, authSelectors } from './redux/auth/';\n\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport Navigation from './Components/Navigation';\nimport Modal from './Components/Modal';\nimport routes from './routes';\n\nimport './App.css';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView.js' /* webpackChunkName: \"home-page\" */),\n);\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView.js' /* webpackChunkName: \"contact-page\" */),\n);\n\nconst LoginView = lazy(() =>\n  import('./views/LoginView.js' /* webpackChunkName: \"login-page\" */),\n);\n\nconst RegistrationView = lazy(() =>\n  import(\n    './views/RegistrationView.js' /* webpackChunkName: \"registration-page\" */\n  ),\n);\n\nfunction App() {\n  const errorLogin = useSelector(authSelectors.getError);\n  const isAuthLoading = useSelector(authSelectors.getLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    errorLogin && toast.warn(`Ошибка! ${errorLogin}`);\n  }, [errorLogin]);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Navigation />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <Route path={routes.home} component={HomeView} exact />\n          <PublicRoute\n            path={routes.register}\n            restricted\n            component={RegistrationView}\n            redirectTo={routes.contacts}\n          />\n          <PublicRoute\n            path={routes.login}\n            restricted\n            component={LoginView}\n            redirectTo={routes.contacts}\n          />\n          <PrivateRoute\n            path={routes.contacts}\n            component={ContactsView}\n            redirectTo={routes.login}\n          />\n          <Route render={() => <h1>Page not found</h1>} />\n        </Switch>\n      </Suspense>\n      <ToastContainer />\n      {isAuthLoading && (\n        <Modal>\n          <h1>Авторизация...</h1>\n        </Modal>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nconst storePersistor = { store, persistor };\n\nexport default storePersistor;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst loginUserRequest = createAction('auth/loginUserRequest');\nconst loginUserSuccess = createAction('auth/loginUserSuccess');\nconst loginUserError = createAction('auth/loginUserError');\n\nconst logoutUserRequest = createAction('auth/logoutUserRequest');\nconst logoutUserSuccess = createAction('auth/logoutUserSuccess');\nconst logoutUserError = createAction('auth/logoutUserError');\n\nconst registrationUserRequest = createAction('auth/registrationUserRequest');\nconst registrationUserSuccess = createAction('auth/registrationUserSuccess');\nconst registrationUserError = createAction('auth/registrationUserError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst actions = {\n  loginUserRequest,\n  loginUserSuccess,\n  loginUserError,\n  logoutUserRequest,\n  logoutUserSuccess,\n  logoutUserError,\n  registrationUserRequest,\n  registrationUserSuccess,\n  registrationUserError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n\nexport default actions;\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst registrationUser = credentials => async dispatch => {\n  dispatch(authActions.registrationUserRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registrationUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registrationUserError(error.message));\n  }\n};\n\nconst loginUser = credentials => async dispatch => {\n  dispatch(authActions.loginUserRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginUserError(error.message));\n  }\n};\n\nconst logoutUser = () => async dispatch => {\n  dispatch(authActions.logoutUserRequest());\n\n  try {\n    const response = await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.logoutUserError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst operations = { loginUser, registrationUser, logoutUser, getCurrentUser };\nexport default operations;\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getError = state => state.auth.error;\n\nconst getLoading = state => state.auth.loading;\n\nconst getUsername = state => state.auth.user.name;\n\nconst selectors = {\n  getIsAuthenticated,\n  getUsername,\n  getError,\n  getLoading,\n};\n\nexport default selectors;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport userAction from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\nconst setUser = (_, { payload }) => payload.user;\nconst user = createReducer(initialUserState, {\n  [userAction.registrationUserSuccess]: setUser,\n  [userAction.loginUserSuccess]: setUser,\n  [userAction.logoutUserSuccess]: () => initialUserState,\n  [userAction.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst initialToken = null;\nconst setToken = (_, { payload }) => payload.token;\nconst token = createReducer(initialToken, {\n  [userAction.registrationUserSuccess]: setToken,\n  [userAction.loginUserSuccess]: setToken,\n  [userAction.logoutUserSuccess]: () => initialToken,\n});\n\nconst setTrue = () => true;\nconst setFalse = () => false;\n\nconst loading = createReducer(false, {\n  [userAction.registrationUserRequest]: setTrue,\n  [userAction.registrationUserSuccess]: setFalse,\n  [userAction.registrationUserError]: setFalse,\n  [userAction.loginUserRequest]: setTrue,\n  [userAction.loginUserSuccess]: setFalse,\n  [userAction.loginUserError]: setFalse,\n  [userAction.logoutUserRequest]: setTrue,\n  [userAction.logoutUserSuccess]: setFalse,\n  [userAction.logoutUserError]: setFalse,\n  [userAction.getCurrentUserRequest]: setTrue,\n  [userAction.getCurrentUserSuccess]: setFalse,\n  [userAction.getCurrentUserError]: setFalse,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [userAction.registrationUserRequest]: () => '',\n  [userAction.registrationUserSuccess]: () => '',\n  [userAction.registrationUserError]: setError,\n  [userAction.loginUserRequest]: () => '',\n  [userAction.loginUserSuccess]: () => '',\n  [userAction.loginUserError]: setError,\n  [userAction.logoutUserRequest]: () => '',\n  [userAction.logoutUserSuccess]: () => '',\n  [userAction.logoutUserError]: setError,\n  [userAction.getCurrentUserRequest]: () => '',\n  [userAction.getCurrentUserSuccess]: () => '',\n  [userAction.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [userAction.registrationUserSuccess]: setTrue,\n  [userAction.loginUserSuccess]: setTrue,\n  [userAction.logoutUserSuccess]: setFalse,\n  [userAction.getCurrentUserSuccess]: setTrue,\n  [userAction.registrationUserError]: setFalse,\n  [userAction.loginUserError]: setFalse,\n  [userAction.getCurrentUserError]: setFalse,\n});\n\nconst userReducer = combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  loading,\n  error,\n});\n\nexport default userReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainLink\":\"Navigation_mainLink__oe2m4\",\"mainLinkActive\":\"Navigation_mainLinkActive__1GlpT\",\"mainNav\":\"Navigation_mainNav__3_a-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"Modal_Modal__backdrop__mm_We\",\"Modal__content\":\"Modal_Modal__content__1C4GJ\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const editContactRequest = createAction('contacts/editContactRequest');\nexport const editContactSuccess = createAction('contacts/editContactSuccess');\nexport const editContactError = createAction('contacts/editContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n//axios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = values => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', values)\n    .then(({ data }) => {\n      return dispatch(addContactSuccess(data));\n    })\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst editContact = values => dispatch => {\n  dispatch(editContactRequest());\n  const { id } = values;\n  delete values.id;\n\n  axios\n    .patch(`/contacts/${id}`, values)\n    .then(({ data }) => {\n      return dispatch(editContactSuccess(data));\n    })\n    .catch(error => dispatch(editContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nconst operationContacts = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  editContact,\n};\n\nexport default operationContacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(el => {\n      const foundPos = el.name.toLowerCase().indexOf(normalizedFilter);\n      return foundPos === -1 ? false : true;\n    });\n  },\n);\n\nconst operationSelectors = {\n  getAllContacts,\n  getFilter,\n  getLoading,\n  getVisibleContacts,\n};\n\nexport default operationSelectors;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [editContactSuccess]: (state, { payload }) =>\n    state.map(todo => (todo.id === payload.id ? payload : todo)),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [editContactRequest]: () => true,\n  [editContactSuccess]: () => false,\n  [editContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n\nexport default contactsReducer;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onClose }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Modal__backdrop} onClick={handleBackdropClick}>\n      <div className={s.Modal__content}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n"],"sourceRoot":""}